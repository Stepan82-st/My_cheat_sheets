/* 
        https://greensock.com/get-started-js
        https://greensock.com/docs/#/HTML5/GSAP/TweenMax/
        https://greensock.com/docs/#/HTML5/GSAP/TimelineMax/
*/
 
////////////////////////////////////////////////////////////////////////////////
//// Анимация //////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////
//// анимация "в" заданное конечное значение из исходного

TweenMax.to(/* параметры анимации */);

///////////////////////////////////////////////////////////
//// анимация "из" заданного стартового значения в исходное

TweenMax.from(/* параметры анимации */);

///////////////////////
//// параметры анимации

TweenMax.to( mob, t, {/* конечные значения и специальные свойства анимации */} );
TweenMax.from( mob, t, {/* стартовые значения и специальные свойства анимации */} );
/* 
       mob - целевой объект (или массив целевых объектов) 
             свойства которого (которых) изменяются в ходе анимации,
             или если записана строка, то воспринимается как селектор CSS 
             который для получения целевого объекта 
             "автоматически" передается API библиотеки jQuery, 
             в случае если jQuery не подключена селектор передается базовому DOM API;
         
       t  -  длительность анимации, в секундах 
*/

TweenMax.to( mob, t, {
    
/* специальные свойства анимации (полный список см. документацию GSAP): */
    
    delay:               /* задержка начала анимации, в секундах */,
    ease:                /* (объект или функция GSAP) эффект изменения скорости анимации 
                            выбрать/копировать из on-line калькулятора эффектов
                            (https://greensock.com/ease-visualizer) */,
    repeat:              /* количество дополнительных повторов анимации, 
                            для бесконечного повторения значение -1 */,
    repeatDelay:         /* интервал между повторами, в секундах */,
    yoyo:                /* (true/false) если true, то каждый следующий повтор 
                            анимация выполняется в противоположном направлении */,
    onComplete:          /* функция выполняемая по окончании анимации */,
    onCompleteParams:    /* (массив) параметры (если необходимо) для функции 
                            выполняемой по окончании анимации */,
    onStart:             /* функция выполняемая в момент начала анимации */,
    onStartParams:       /* (массив) параметры (если необходимо) для функции 
                            выполняемой в момент начала анимации */,

/* ("стандартные" GSAP) свойства анимации: */

    alpha:        /* прозрачность (0...1) */,
    height:       /* высота, в пикселях (число) */,
    width:        /* ширина, в пикселях (число) */,
    rotation:     /* вращение, в градусах (число) */,
    rotationX:    /* вращение относительно оси X, в градусах (число) */,
    rotationY:    /* вращение относительно оси Y, в градусах (число) */,
    rotationZ:    /* вращение относительно оси Z, в градусах (число) */,
    scaleX:       /* масштабирование по оси X (число)   */,                            
    scaleY:       /* масштабирование по оси Y (число) */,
    scaleZ:       /* масштабирование по оси Z (число) */,
    x:            /* координата относительно левого верхнего угла 
                     родительского элемента, в пикселях (число) */,
    y:            /* координата относительно левого верхнего угла 
                     родительского элемента, в пикселях (число) */,
    z:            /* координата относительно левого верхнего угла 
                     родительского элемента, в пикселях (число) */

/* 
   как свойства анимации так-же воспринимаются все CSS-свойства 
   и функции CSS-свойства transform, значения имеют строковый формат, 
   как в соответствующих значениях свойств стилей, 
   с указанием пикселей ("24px"), градусов ("45deg") и т.п. 
*/   

/*
   значения свойств анимации: 
       абсолютные -    "В КАКОЕ" значение изменить целевой объект ("100px", "25deg");
       относительные - "НА КАКОЕ" значение изменить целевой объект ("+=100px", "-=25deg")
*/

}                                                    


////////////////////////////////////////////////////////////////////////////////
//// Линия времени /////////////////////////////////////////////////////////////
//// (возможность распределять анимации относительно во времени) ///////////////
////////////////////////////////////////////////////////////////////////////////

var tl = new TimelineMax(/* специальные свойства линии времени */);

var tl = new TimelineMax({
/* специальные свойства линии времени (полный список см. документацию GSAP): */
    delay:               /* задержка начала анимации, в секундах */,
    onComplete:          /* функция выполняемая по окончании анимации */,
    onCompleteParams:    /* (массив) параметры (если необходимо) для функции 
                            выполняемой по окончании анимации */,
    onStart:             /* функция выполняемая в момент начала анимации */,
    onStartParams:       /* (массив) параметры (если необходимо) для функции 
                            выполняемой в момент начала анимации */,
    repeat:              /* количество дополнительных повторов анимации, 
                            для бесконечного повторения значение -1 */,
	
});

////////////////////////////////////////////////////////////
// добавление анимации в очередь выполнения на линии времени

tl.to(/* см. аргументы анимации */, pos);
/* 
    pos - (секунды) при необходимости позиция вызова (момент вызова в линии времени):
        абсолютная запись - момент времени отсчитанный от начала линии времени;
        относительная запись - смещение от момента "вставки" метода to.
*/

//////////////////////////////////////////////////////////////////
// добавление вызова функции в очередь выполнения на линии времени

tl.call(fnc, arg, pos);
/* 
    fnc - вызываемая функция
    arg - (массив) параметры (если необходимо) для функции
    pos - (секунды) при необходимости позиция вызова (момент вызова в линии времени):
              абсолютная запись - момент времени отсчитанный от начала линии времени;
              относительная запись - смещение от момента "вставки" метода call.
*/

/////////////////////////////////////////////////////////////////////////////////
// добавление другой линии времени в очередь выполнения на основной линии времени

tl.add(tl2, pos);
/* 
    tl2 - добавляемая линия времени
    pos - (секунды) при необходимости позиция вызова (момент вызова в основной линии времени):
              абсолютная запись - момент времени отсчитанный от начала основной линии времени;
              относительная запись - смещение от момента "вставки" метода add.
*/

////////////////////////////
// управление линией времени

/* остановка воспроизведения линии времени в момент вызова метода pause */
tl.pause(/* могут использоваться параметры (см. документацию GSAP) */); 

/* воспроизведения (тоько в прямом направлении) с момента остановки */
tl.play(/* могут использоваться параметры (см. документацию GSAP) */);

/* продолжение воспроизведения (в текущем направлении) с момента остановки */
tl.resume(/* могут использоваться параметры (см. документацию GSAP) */);

/* воспроизведение анимации в обратном направлении/порядке */
tl.reverse(/* могут использоваться параметры (см. документацию GSAP) */);

/* полностью прекращает работу анимации, без возможности возобновить */
tl.kill(/* могут использоваться параметры (см. документацию GSAP) */);

/* переход к определенному моменту времени (при любом состоянии воспроизведения) */
tl.seek(pos);
/* 
    pos - (секунды) позиция перехода в линии времени:
          абсолютная запись - момент времени отсчитанный от начала линии времени;
          относительная запись - смещение от начала "+=" или от конца "-=" линии времени.
*/



